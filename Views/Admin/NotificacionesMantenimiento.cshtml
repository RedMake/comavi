@model List<MantenimientoNotificacionViewModel>
@{
    ViewData["Title"] = "Notificaciones de Mantenimiento";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Notificaciones de Mantenimiento</h1>
    <a href="@Url.Action("Index", "Admin")" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm">
        <i class="fas fa-arrow-left fa-sm text-white-50"></i> Volver al Panel
    </a>
</div>


<!-- Filtros -->
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Configuración</h6>
    </div>
    <div class="card-body">
        <form method="get" action="@Url.Action("NotificacionesMantenimiento", "Admin")" class="row g-3 align-items-end">
            <div class="col-md-6">
                <label for="diasAntelacion" class="form-label">Mostrar mantenimientos planificados en los próximos:</label>
                <select class="form-control" id="diasAntelacion" name="diasAntelacion" onchange="this.form.submit()">
                    <option value="15" selected="@(ViewBag.DiasAntelacion == 15)">15 días</option>
                    <option value="30" selected="@(ViewBag.DiasAntelacion == 30)">30 días</option>
                    <option value="60" selected="@(ViewBag.DiasAntelacion == 60)">60 días</option>
                    <option value="90" selected="@(ViewBag.DiasAntelacion == 90)">90 días</option>
                </select>
            </div>
            <div class="col-md-3">
                <button type="submit" class="btn btn-primary w-100">Aplicar</button>
            </div>
            <div class="col-md-3">
                <a href="@Url.Action("ActualizarEstadoMantenimiento", "Admin")" class="btn btn-secondary w-100">
                    <i class="fas fa-sync"></i> Actualizar Estados
                </a>
            </div>
        </form>
    </div>
</div>

<!-- Mantenimientos para hoy -->
@{
    var mantenimientosHoy = Model.Where(m => m.es_hoy).ToList();
}
@if (mantenimientosHoy.Any())
{
    <div class="card border-left-danger shadow mb-4">
        <div class="card-header py-3 bg-danger">
            <h6 class="m-0 font-weight-bold text-white">Mantenimientos Programados para HOY</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="mantenimientosHoyTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Camión</th>
                            <th>Placa</th>
                            <th>Descripción</th>
                            <th>Estado</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var mantenimiento in mantenimientosHoy)
                        {
                            <tr class="table-danger">
                                <td>@mantenimiento.id_mantenimiento</td>
                                <td>@mantenimiento.id_camion</td>
                                <td>@mantenimiento.numero_placa</td>
                                <td>@mantenimiento.descripcion</td>
                                <td>
                                    <span class="badge badge-danger">
                                        HOY
                                    </span>
                                </td>
                                <td>
                                    <a href="@Url.Action("HistorialMantenimiento", "Admin", new { idCamion = mantenimiento.id_camion })" class="btn btn-sm btn-info">
                                        <i class="fas fa-tools"></i> Ver Detalles
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

<!-- Tabla de Mantenimientos Próximos -->
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Mantenimientos Próximos</h6>
    </div>
    <div class="card-body">
        @if (Model.Count > 0)
        {
            <div class="table-responsive">
                <table class="table table-bordered" id="mantenimientosTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Camión</th>
                            <th>Placa</th>
                            <th>Fecha Programada</th>
                            <th>Descripción</th>
                            <th>Días Restantes</th>
                            <th>Estado Camión</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var mantenimiento in Model.Where(m => !m.es_hoy))
                        {
                            <tr>
                                <td>@mantenimiento.id_mantenimiento</td>
                                <td>@mantenimiento.id_camion</td>
                                <td>@mantenimiento.numero_placa</td>
                                <td>@(string.IsNullOrEmpty(mantenimiento.fecha_mantenimiento) ? "Error" : mantenimiento.fecha_mantenimiento)</td>
                                <td>@mantenimiento.descripcion</td>
                                <td>
                                    <span class="badge badge-@mantenimiento.EstadoAlerta">
                                        @mantenimiento.dias_restantes días
                                    </span>
                                </td>
                                <td>
                                    <span class="badge badge-@(mantenimiento.estado_camion == "activo" ? "success" :
                                                             mantenimiento.estado_camion == "mantenimiento" ? "warning" : "danger")">
                                        @(mantenimiento.estado_camion.Substring(0, 1).ToUpper() + mantenimiento.estado_camion.Substring(1, mantenimiento.estado_camion.Length - 1))
                                    </span>
                                </td>
                                <td>
                                    <a href="@Url.Action("HistorialMantenimiento", "Admin", new { idCamion = mantenimiento.id_camion })" class="btn btn-sm btn-info">
                                        <i class="fas fa-tools"></i> Ver Detalles
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-info">
                <i class="fas fa-info-circle"></i> No hay mantenimientos programados para el período seleccionado.
            </div>
        }
    </div>
</div>

<!-- Camiones sin Mantenimiento Reciente -->
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Camiones sin Mantenimiento Reciente</h6>
    </div>
    <div class="card-body">
        @if (ViewBag.CamionesSinMantenimiento != null && ViewBag.CamionesSinMantenimiento.Count > 0)
        {
            <div class="table-responsive">
                <table class="table table-bordered" id="camionesSinMantenimientoTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Marca/Modelo</th>
                            <th>Placa</th>
                            <th>Último Mantenimiento</th>
                            <th>Días Transcurridos</th>
                            <th>Estado</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var camion in ViewBag.CamionesSinMantenimiento)
                        {
                            <tr>
                                <td>@camion.id_camion</td>
                                <td>@camion.marca / @camion.modelo</td>
                                <td>@camion.numero_placa</td>
                                <td>@(string.IsNullOrEmpty(camion.ultima_fecha_mantenimiento) ? "Nunca" : camion.ultima_fecha_mantenimiento)</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(camion.ultima_fecha_mantenimiento))
                                    {
                                        DateTime fechaUltimoMantenimiento;
                                        // Usar formato específico DD/MM/YYYY para el parsing
                                        if (DateTime.TryParseExact(camion.ultima_fecha_mantenimiento,
                                        "dd/MM/yyyy",
                                        System.Globalization.CultureInfo.InvariantCulture,
                                        System.Globalization.DateTimeStyles.None,
                                        out fechaUltimoMantenimiento))
                                        {
                                            // Calcular días transcurridos
                                            var diasTranscurridos = (DateTime.Now - fechaUltimoMantenimiento).Days;

                                            // Manejar fechas futuras de manera especial
                                            if (diasTranscurridos < 0)
                                            {
                                                <span class="badge badge-info">
                                                    Programado (@Math.Abs(diasTranscurridos) días)
                                                </span>
                                            }
                                            else
                                            {
                                                var estadoAlerta = diasTranscurridos > 180 ? "danger" :
                                                diasTranscurridos > 90 ? "warning" : "success";

                                                <span class="badge badge-@estadoAlerta">
                                                    @diasTranscurridos días
                                                </span>
                                            }
                                        }
                                        else
                                        {
                                            <span class="badge badge-danger">Formato inválido</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="badge badge-danger">Sin registro</span>
                                    }
                                </td>
                                <td>
                                    <span class="badge badge-@(camion.estado == "activo" ? "success" : camion.estado == "mantenimiento" ? "warning" : "danger")">
                                        @(camion.estado.Substring(0, 1).ToUpper() + camion.estado.Substring(1, camion.estado.Length - 1))
                                    </span>
                                </td>
                                <td>
                                    <a href="@Url.Action("HistorialMantenimiento", "Admin", new { idCamion = camion.id_camion })" class="btn btn-sm btn-primary">
                                        <i class="fas fa-tools"></i> Programar
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-success">
                <i class="fas fa-check-circle"></i> Todos los camiones tienen mantenimientos recientes o programados.
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#mantenimientosHoyTable, #mantenimientosTable, #camionesSinMantenimientoTable').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.25/i18n/Spanish.json"
                },
                "order": [[3, "asc"]], // Ordenar por fecha
                "pageLength": 10
            });
        });
    </script>
}