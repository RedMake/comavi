<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<location path="." inheritInChildApplications="false">
		<system.webServer>
			<handlers>
				<add name="aspNetCore" path="*" verb="*" modules="AspNetCoreModuleV2" resourceType="Unspecified" />
			</handlers>
			<aspNetCore processPath="dotnet" arguments=".\COMAVI_SA.dll" stdoutLogEnabled="false" stdoutLogFile=".\logs\stdout" hostingModel="inprocess" />
			<security>
				<requestFiltering removeServerHeader="true">
					<!-- Limitar tamaño de carga y longitud de URL -->
					<requestLimits maxAllowedContentLength="30000000" maxUrl="4096" maxQueryString="2048">
						<!-- Prevenir ataques de DDoS basados en campos largos -->
						<headerLimits>
							<add header="Content-type" sizeLimit="100" />
							<add header="Authorization" sizeLimit="2048" />
							<add header="Cookie" sizeLimit="4096" />
							<add header="User-Agent" sizeLimit="512" />
							<add header="Referer" sizeLimit="1024" />
						</headerLimits>
					</requestLimits>
				</requestFiltering>
				<!-- Filtrado dinámico de IPs -->
				<dynamicIpSecurity enableLoggingOnlyMode="false">
					<denyByConcurrentRequests enabled="true" maxConcurrentRequests="25" />
					<denyByRequestRate enabled="true" maxRequests="30" requestIntervalInMilliseconds="1000" />
				</dynamicIpSecurity>
			</security>
			<httpProtocol>
				<customHeaders>
					<remove name="X-Powered-By" />
					<remove name="Server" />
					<add name="X-Frame-Options" value="SAMEORIGIN" />
					<add name="X-XSS-Protection" value="1; mode=block" />
					<add name="X-Content-Type-Options" value="nosniff" />
					<add name="Strict-Transport-Security" value="max-age=31536000; includeSubDomains; preload" />
					<add name="Content-Security-Policy" value="default-src 'self'; script-src 'self' https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' https://cdnjs.cloudflare.com; connect-src 'self'; form-action 'self'; frame-ancestors 'self'; base-uri 'self'; object-src 'none'" />
					<add name="Referrer-Policy" value="strict-origin-when-cross-origin" />
					<add name="Permissions-Policy" value="camera=(), microphone=(), geolocation=(), interest-cohort=()" />
					<add name="Cache-Control" value="no-store, max-age=0" />
					<add name="Pragma" value="no-cache" />
					<add name="Cross-Origin-Embedder-Policy" value="require-corp" />
					<add name="Cross-Origin-Opener-Policy" value="same-origin" />
					<add name="Cross-Origin-Resource-Policy" value="same-origin" />
					<add name="X-Permitted-Cross-Domain-Policies" value="none" />
					<add name="Set-Cookie" value="HttpOnly; Secure; SameSite=Strict" />
				</customHeaders>
			</httpProtocol>
			<rewrite>
				<rules>
					<!-- Forzar HTTPS -->
					<rule name="HTTP to HTTPS redirect" stopProcessing="true">
						<match url="(.*)" />
						<conditions>
							<add input="{HTTPS}" pattern="off" ignoreCase="true" />
						</conditions>
						<action type="Redirect" url="https://{HTTP_HOST}/{R:1}" redirectType="Permanent" />
					</rule>
					<!-- Regla para bloquear escaneos de vulnerabilidades comunes -->
					<rule name="Block vulnerability scanners" stopProcessing="true">
						<match url=".*" />
						<conditions>
							<add input="{URL}" pattern="\.(git|svn|htaccess|env|config|bak|sql|db|mdb|ini|log)$" />
						</conditions>
						<action type="CustomResponse" statusCode="404" />
					</rule>
				</rules>
				<outboundRules>
					<!-- Eliminar Server header de respuestas -->
					<rule name="Remove Server header">
						<match serverVariable="RESPONSE_SERVER" pattern=".+" />
						<action type="Rewrite" value="" />
					</rule>
				</outboundRules>
			</rewrite>
			<!-- Compresión de contenido -->
			<urlCompression doStaticCompression="true" doDynamicCompression="true" />
			<staticContent>
				<!-- Configuración de MIME types -->
				<remove fileExtension=".css" />
				<mimeMap fileExtension=".css" mimeType="text/css" />
				<remove fileExtension=".js" />
				<mimeMap fileExtension=".js" mimeType="application/javascript" />
				<remove fileExtension=".json" />
				<mimeMap fileExtension=".json" mimeType="application/json" />
				<remove fileExtension=".webp" />
				<mimeMap fileExtension=".webp" mimeType="image/webp" />
				<remove fileExtension=".svg" />
				<mimeMap fileExtension=".svg" mimeType="image/svg+xml" />
			</staticContent>
		</system.webServer>
	</location>
</configuration>
